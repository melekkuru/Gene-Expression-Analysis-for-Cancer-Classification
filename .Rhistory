dim(InitialData)
# Read the data into RStudio (or R) using the read.csv R command
InitialData<-read.csv(file="gene-expression-invasive-vs-noninvasive-cancer.csv")
InitialData <- read.csv(file="C:\\Users\\melek\\OneDrive\\Masaüstü\\Assignments\\Applied Stat\\Data\\gene-expression-invasive-vs-noninvasive-cancer.csv")
# Veri setinin ilk birkaç satırını görüntüleyin
head(InitialData)
dim(InitialData)
dimnames(InitialData)[[2]][4947:4949]
table(InitialData[4949])
#
#  [1] 4136 4878  175 1409 3208   69 1571 4844  211 3325
set.seed(2315873)
# Selects your random individual subset of 10 genes
index <- sample(4948, size=10)
mynewdata <- InitialData[, index]
dim(mynewdata)
#Variance matrix for the 10 genes
variances <- apply(mynewdata, 2, var)
variances
# Covariance matrix for the 10 genes
covarience <- round(cov(mynewdata),4)
covarience
# Correlation matrix for the 10 genes
correlation<- round(cor(mynewdata),4)
correlation
#Use the scatter plot
pairs(mynewdata[,c(1:10)])
#Identify and present the scaled distance matrix.
distance<- dist(scale(mynewdata, center = FALSE))
distance_matrix<- as.dist(round(as.matrix(distance), 2)[1:13, 1:13])
distance_matrix
#Q-Q Plots
columns_mean <- colMeans(mynewdata)
generalized_distance <- apply(mynewdata, MARGIN = 1, function(x)
t(x - columns_mean) %*% solve(covarience) %*% (x - columns_mean))
par(mfrow=c(2,2))
for(gene in names(mynewdata)) {
qqnorm(mynewdata[[gene]], main = gene)
qqline(mynewdata[[gene]])
}
# Principal Component Analysis
pca <- princomp(mynewdata, cor = TRUE)
summary(pca, loadings = TRUE)
# Scree plot
plot(pca, main='components vs eigenvalues')
# Extract the scores of the observations in each principal component (1,2,3)
# to check the variance of the components
scores <- pca$scores
# scatter plot for the first three principal components
pairs(pca$scores[,1:3])
set.seed(2315873)
my_index <- sample(1:4948, size = 10)
my_class_subset <- InitialData[, c(my_index,4949 )]
# check the subset's dimensions
dim(my_class_subset)
# Assign each label to the class that it belongs to (label1/2).
my_class_subset$type_of_cancer <- ifelse(my_class_subset$Class == 1,
"Invasive", "Noninvasive")
my_class_subset$type_of_cancer <- factor(my_class_subset$type_of_cancer,
label=c("Invasive","Noninvasive"))
# use a contingency table to verify the counts
table(my_class_subset$type_of_cancer)
thedata <- as.matrix(my_class_subset[,c(1:10)])
manova_fit <- manova(thedata ~ type_of_cancer, data = my_class_subset)
summary(manova_fit,intercept=TRUE)
#Give each of the two groups a boxplot.
boxplot(thedata ~ type_of_cancer, data = my_class_subset,
main = "Type Of Cancer", col = c("blue", "red"))
names(my_class_subset)
# Perform PCA
pca_result <- prcomp(my_class_subset[, 1:10], center = TRUE, scale = TRUE)
# Extract the first and second principal components
pc1 <- pca_result$x[, 1]
pc2 <- pca_result$x[, 2]
# Create a scatter plot using the first and second principal components
plot(pc1, pc2, col = my_class_subset$type_of_cancer, pch = 16,
main = "PCA Plot of PC1 vs PC2",
xlab = "Principal Component 1", ylab = "Principal Component 2", cex = 1.2)
# Add a legend
legend("topright", legend = levels(my_class_subset$type_of_cancer),
col = 1:2, pch = 16, title = "Class")
names(my_class_subset)
library(MASS)
lda1 <- lda(type_of_cancer ~ . - Class, data = my_class_subset)
lda1
#using training data, determine each observation's class label.
lda_predict <- predict(lda1)$class
#the results' confusion matrix
conf_matrix <- table(lda_predict,my_class_subset$type_of_cancer)
conf_matrix
#the entire set of observations used for training
total <- sum(conf_matrix) ; cat('Total observations: ', total, '\n')
#total of the confusion matrix's rows and columns
row1 <- sum(conf_matrix[1, ])
cat('sum of the first row: ', row1, '\n')
row2 <- sum(conf_matrix[2, ])
cat('sum of the second row: ',row2, '\n')
column1 <- sum(conf_matrix[,1])
cat('sum of the first column: ',column1, '\n')
column2 <- sum(conf_matrix[,2])
cat('sum of the second column: ',column2, '\n')
#total number of classification errors seen
error <- conf_matrix[2,1]+ conf_matrix[1,2]
cat('Misclassified observations: ', error, '\n')
# probability of misclassification
prob_of_misclass = error/total
cat('probability of misclassification: ', prob_of_misclass, '\n')
# Sensitivity
sensitivity <- conf_matrix[1,1]/ row1
cat('Sensitivity is: ' , sensitivity, '\n')
# specificity
specificity <- conf_matrix[2,2]/ row2
cat('Specificity is:',specificity)
#4-(b)Apply Quadratic discriminant analysis (QDA) to your random subset of
#10 genes and the class variable (invasive (label 1) and noninvasive
#(label 2) cancer). Calculate a confusion matrix, sensitivity, specificity
#and misclassification error. Add appropriate tables and figures to your report.
library(MASS)
qda <- qda(type_of_cancer ~ . - Class, data = my_class_subset)
qda
#using training data, determine each observation's class label.
qda_predict <- predict(qda)$class
#the results' confusion matrix
conf_matrix <- table(qda_predict,my_class_subset$type_of_cancer)
conf_matrix
#the entire set of observations used for training
total <- sum(conf_matrix) ; cat('Total observations: ', total, '\n')
#total of the confusion matrix's rows and columns
row1 <- sum(conf_matrix[1, ])
cat('sum of the first row: ', row1, '\n')
row2 <- sum(conf_matrix[2, ])
cat('sum of the second row: ',row2, '\n')
column1 <- sum(conf_matrix[,1])
cat('sum of the first column: ',column1, '\n')
column2 <- sum(conf_matrix[,2])
cat('sum of the second column: ',column2, '\n')
#total number of classification errors seen
error <- conf_matrix[2,1]+ conf_matrix[1,2]
cat('Misclassified observations: ', error, '\n')
# probability of misclassification
prob_of_misclass = error/total
cat('probability of misclassification: ', prob_of_misclass, '\n')
# Sensitivity
sensitivity <- conf_matrix[1,1]/ row1
cat('Sensitivity is: ' , sensitivity, '\n')
# specificity
specificity <- conf_matrix[2,2]/ row2
cat('Specificity is:',specificity)
#5. (25 marks). Use the median of the first principal component of your random
#subset of 10 genes to predict the class variable (invasive (label 1) and
#noninvasive (label 2) cancer).
#Use Fisher’s Exact test and sensitivity,
#specificity and Youden index. Add appropriate tables and figures to your report.
# The first principal component P.C.1
pc1 <- pca$scores[, 1]
# The median of the first principal component
pc1_median <- median(pc1) ; cat('Median of pc1 is: ', pc1_median)
decision <- ifelse(pc1 > pc1_median, "Invasive", "Noninvasive")
decision <- factor(decision, label=c("Invasive","Noninvasive"))
# build a confusion matrix
conf_matrix <- table(decision,my_class_subset$type_of_cancer) ; conf_matrix
# Fisher's Exact test
fisher.test(conf_matrix)
# Sensitivity
sensitivity <- conf_matrix[1,1]/ row1 ;  sensitivity
# specificity
specificity <- conf_matrix[2,2]/ row2 ; specificity
# Youden index
youden_index <- sensitivity+specificity-1;youden_index
#THE EXPLANATION FOR QUESTION 5:
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#THE EXPLANATION FOR QUESTION 5:
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#The median of the first principal component from our random subset of 10 genes, we predicted the class
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#variable (invasive and noninvasive cancer). The median of the first principal component (P.C.1) was found to
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#representing the proportion of correctly identified invasive cases, was 55.2%, while the specificity,
#be -0.04378912. We then classified observations as "Invasive" or "Noninvasive" based on whether their
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#representing the proportion of correctly identified invasive cases, was 55.2%, while the specificity,
#indicating the proportion of correctly identified noninvasive cases, was 42.9%.
#P.C.1 values were above or below the median, respectively.
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#representing the proportion of correctly identified invasive cases, was 55.2%, while the specificity,
#indicating the proportion of correctly identified noninvasive cases, was 42.9%.
#Lastly, the Youden index, a measure of the classifier's overall performance, was found to be -0.0197,
#The resulting confusion matrix indicates that out of 78 observations, 16 were classified as Invasive and
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#representing the proportion of correctly identified invasive cases, was 55.2%, while the specificity,
#indicating the proportion of correctly identified noninvasive cases, was 42.9%.
#Lastly, the Youden index, a measure of the classifier's overall performance, was found to be -0.0197,
#indicating limited discriminative ability between the predicted and actual classes.
#23 as Noninvasive, while 18 were misclassified as Noninvasive and 21 as Invasive.
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#representing the proportion of correctly identified invasive cases, was 55.2%, while the specificity,
#indicating the proportion of correctly identified noninvasive cases, was 42.9%.
#Lastly, the Youden index, a measure of the classifier's overall performance, was found to be -0.0197,
#indicating limited discriminative ability between the predicted and actual classes.
#These findings suggest that using the median of the first principal component alone may not be sufficient
#We conducted Fisher's Exact test to assess the association between the predicted classes and the actual
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#representing the proportion of correctly identified invasive cases, was 55.2%, while the specificity,
#indicating the proportion of correctly identified noninvasive cases, was 42.9%.
#Lastly, the Youden index, a measure of the classifier's overall performance, was found to be -0.0197,
#indicating limited discriminative ability between the predicted and actual classes.
#These findings suggest that using the median of the first principal component alone may not be sufficient
#for accurate prediction of cancer types, as evidenced by the relatively low sensitivity and specificity and
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#representing the proportion of correctly identified invasive cases, was 55.2%, while the specificity,
#indicating the proportion of correctly identified noninvasive cases, was 42.9%.
#Lastly, the Youden index, a measure of the classifier's overall performance, was found to be -0.0197,
#indicating limited discriminative ability between the predicted and actual classes.
#These findings suggest that using the median of the first principal component alone may not be sufficient
#for accurate prediction of cancer types, as evidenced by the relatively low sensitivity and specificity and
#the nonsignificant association revealed by Fisher's Exact test.
#cancer types. The test yielded a p-value of 0.8196, suggesting no significant association between the
#predicted and actual classes.
#Furthermore, we calculated the sensitivity and specificity of the classification. The sensitivity,
#representing the proportion of correctly identified invasive cases, was 55.2%, while the specificity,
#indicating the proportion of correctly identified noninvasive cases, was 42.9%.
#Lastly, the Youden index, a measure of the classifier's overall performance, was found to be -0.0197,
#indicating limited discriminative ability between the predicted and actual classes.
#These findings suggest that using the median of the first principal component alone may not be sufficient
#for accurate prediction of cancer types, as evidenced by the relatively low sensitivity and specificity and
#the nonsignificant association revealed by Fisher's Exact test.
# Save scatter plot
png("results/scatter_plot.png") # Specify the results directory
pairs(mynewdata[, c(1:10)]) # Your scatter plot code
dev.off()
# Save Q-Q plots
png("results/qq_plots.png")
par(mfrow = c(2, 2))
for (gene in names(mynewdata)) {
qqnorm(mynewdata[[gene]], main = gene)
qqline(mynewdata[[gene]])
}
dev.off()
# Save PCA plot
png("results/pca_plot.png")
plot(pc1, pc2, col = my_class_subset$type_of_cancer, pch = 16,
main = "PCA Plot of PC1 vs PC2",
xlab = "Principal Component 1", ylab = "Principal Component 2", cex = 1.2)
legend("topright", legend = levels(my_class_subset$type_of_cancer),
col = 1:2, pch = 16, title = "Class")
dev.off()
png("results/boxplot_type_of_cancer.png")
boxplot(thedata ~ type_of_cancer, data = my_class_subset,
main = "Type Of Cancer", col = c("blue", "red"))
dev.off()
# Save Variance matrix
write.csv(as.data.frame(variances), "results/variance_matrix.csv", row.names = TRUE)
# Save Covariance matrix
write.csv(as.data.frame(covarience), "results/covariance_matrix.csv", row.names = TRUE)
# Save Correlation matrix
write.csv(as.data.frame(correlation), "results/correlation_matrix.csv", row.names = TRUE)
# Save Distance matrix
write.csv(as.data.frame(as.matrix(distance)), "results/distance_matrix.csv", row.names = TRUE)
